
C:\Users\Kent4\Projects\Wildcat_Wind_Power\WWP_2024_Turbine_Control_Code\build\src.ino.hex/src.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001e88 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0000bae0 l    d  .fini	00000000 .fini
0000bae4 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20001ac0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6000f53c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 tempmon.c
20002b24 l     O .bss	00000004 s_hotCount
20002b28 l     O .bss	00000004 s_hotTemp
20002b2c l     O .bss	00000004 s_hot_ROOM
20002b30 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00002f64 l     F .text.itcm	00000088 schedule_transfer
00002fec l     F .text.itcm	00000036 run_callbacks
00003024 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000204c l     O .bss	00000008 endpoint0_buffer
20002054 l     O .bss	00000004 endpoint0_notify_mask
20001c80 l     O .bss	00000008 endpoint0_setupdata
20002058 l     O .bss	00000004 endpointN_notify_mask
20002ae4 l     O .bss	00000008 reply_buffer
20002b66 l     O .bss	00000001 sof_usage
20002b6e l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
20002b61 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20002ac8 l     O .bss	00000000 object.0
60001e80 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 src.ino.cpp
00000cdc l     F .text.itcm	00000050 _GLOBAL__sub_I_myServo
00000000 l    df *ABS*	00000000 usb_desc.c
200016cc l     O .data	00000012 device_descriptor
200016e0 l     O .data	00000028 microsoft_os_compatible_id_desc
20001708 l     O .data	00000012 microsoft_os_string_desc
60001f84 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 commands.cpp
00000000 l    df *ABS*	00000000 filter.cpp
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 PA12.cpp
00000000 l    df *ABS*	00000000 Adafruit_INA260.cpp
00000000 l    df *ABS*	00000000 Adafruit_BusIO_Register.cpp
00000000 l    df *ABS*	00000000 Adafruit_I2CDevice.cpp
00000000 l    df *ABS*	00000000 Adafruit_SPIDevice.cpp
00001948 l     F .text.itcm	000001b4 Adafruit_SPIDevice::transfer(unsigned char*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 SPI.cpp
00001d38 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 Adafruit_MCP4725.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
20001c88 l     O .bss	00000040 rx_buffer1
20001cc8 l     O .bss	00000040 tx_buffer1
20000608 l     O .data	00000060 UART6_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
000038c4 l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
00003924 l     F .text.itcm	000000b4 rx_event
000039d8 l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
00003a68 l     F .text.itcm	000001b8 usb_serial_write.part.0
20002af4 l     O .bss	00000004 rx_available
20002af8 l     O .bss	00000010 rx_count
20002b64 l     O .bss	00000001 rx_head
20002b08 l     O .bss	00000010 rx_index
20002b18 l     O .bss	00000009 rx_list
20002b58 l     O .bss	00000002 rx_packet_size
20002b65 l     O .bss	00000001 rx_tail
20001b00 l     O .bss	00000100 rx_transfer
20002b68 l     O .bss	00000001 transmit_previous_timeout
20002b5a l     O .bss	00000002 tx_available
20002b69 l     O .bss	00000001 tx_head
20002b6a l     O .bss	00000001 tx_noautoflush
20002b5c l     O .bss	00000002 tx_packet_size
20001c00 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20002b60 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-atol.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
0000631c l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-tolower.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00006544 l     F .text.itcm	00000018 stdio_exit_handler
0000655c l     F .text.itcm	00000040 cleanup_stdio
0000659c l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strchr.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-strstr.o
00006af0 l     F .text.itcm	000000c6 critical_factorization
00006bb8 l     F .text.itcm	000001f8 two_way_long_needle
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
00007830 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-strnlen.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00008fe8 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00009e88 l     F .text.itcm	00000076 __sprint_r.part.0
0000ae8c l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
60001e40 l     F .text.code	00000008 __memset_veneer
60001e48 l     F .text.code	00000008 ____libc_init_array_veneer
60001e50 l     F .text.code	00000008 __delay_veneer
60001e58 l     F .text.code	00000008 __set_arm_clock_veneer
60001e60 l     F .text.code	00000008 __main_veneer
60001e68 l     F .text.code	00000008 __sm_set_pool_veneer
60001e70 l     F .text.code	00000008 __pwm_init_veneer
60001e78 l     F .text.code	00000008 __usb_init_serialnumber_veneer
0000bad0 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0000bad8 l     F .text.itcm	00000008 ___init_veneer
000003ac g     F .text.itcm	000004a4 PrintOutput()
0000193c g     F .text.itcm	0000000c Adafruit_I2CDevice::setSpeed(unsigned long)
00003e48 g     F .text.itcm	00000018 usb_serial_available
00002130 g     F .text.itcm	00000036 String::String(float, unsigned char)
00008a8c g     F .text.itcm	00000062 __any_on
0000b6c0 g     F .text.itcm	00000024 _isatty_r
0000733c g     F .text.itcm	000000ba strcpy
000020d8 g     F .text.itcm	0000002c String::String(int, unsigned char)
00001c0c g     F .text.itcm	00000064 Adafruit_SPIDevice::endTransactionWithDeassertingCS()
6000167c g     F .text.code	00000002 startup_default_late_hook
00006f48 g     F .text.itcm	0000002c _lseek_r
00004018  w    F .text.itcm	000000d8 yield
00001190 g     F .text.itcm	0000001c PA12::PA12(HardwareSerial*, int, bool)
0000170c g     F .text.itcm	0000001a Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice*, unsigned short, unsigned char, unsigned char, unsigned char)
20002b54 g     O .bss	00000004 usb_timer1_callback
60001ea0 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
60001794 g     F .text.code	00000384 configure_external_ram
2000173e g     O .data	00000002 dacValue
200016c8 g     O .data	00000004 dacStepSize
0000ba00 g     F .text.itcm	0000005a .hidden __floatdidf
20001ecc g     O .bss	00000001 __lock___atexit_recursive_mutex
00009dfc g     F .text.itcm	0000004c _wcrtomb_r
00001f10 g     F .text.itcm	0000001c Print::println()
00006770 g     F .text.itcm	00000020 __sseek
00006670 g     F .text.itcm	0000003c __sinit
00008b0c g     F .text.itcm	000000a4 fcvtbuf
0000b5e4 g     F .text.itcm	000000b0 __swbuf_r
00002324 g     F .text.itcm	00000056 String::substring(unsigned int) const
00002250 g     F .text.itcm	0000001c String::append(char const*)
00005008 g     F .text.itcm	0000000c __malloc_unlock
20002b5f g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
60001de0 g     F .text.code	00000054 analog_init
00000110 g     F .text.itcm	0000011c Help()
00001874 g     F .text.itcm	00000070 Adafruit_I2CDevice::_read(unsigned char*, unsigned int, bool)
200010bc g     O .data	00000004 F_CPU_ACTUAL
0000237c g     F .text.itcm	00000054 String::substring(unsigned int, unsigned int) const
00006798 g     F .text.itcm	000000f8 memmove
0000807c g     F .text.itcm	0000004c _Balloc
0000baec g       .ARM.exidx	00000000 __exidx_end
20002b5e g     O .bss	00000001 EventResponder::runningFromYield
00002f04 g     F .text.itcm	00000060 tempmonGetTemp
00001e74 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
20001130 g     O .data	00000004 __atexit_recursive_mutex
00004a48 g     F .text.itcm	00000008 atol
00006ff0 g     F .text.itcm	0000000c __errno
0000468c g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
60001000 g     O .text.headers	00000020 ImageVectorTable
00002130 g     F .text.itcm	00000036 String::String(float, unsigned char)
20001d10 g     O .bss	00000004 EventResponder::firstInterrupt
00003854 g     F .text.itcm	00000004 usb_transfer_status
000049b8 g     F .text.itcm	00000084 sm_set_pool
20001d18 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
20002044 g     O .bss	00000004 __stdio_exit_handler
200010d0 g     O .data	00000060 Serial1
0000ba5c g     F .text.itcm	00000030 .hidden __aeabi_d2lz
00002000 g     F .text.itcm	00000038 String::String(String const&)
000038bc  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
0000b694 g     F .text.itcm	0000002c _fstat_r
20000ae0 g     O .data	00000370 digital_pin_to_info_PGM
2000205c g     O .bss	00000004 errno
0000022c g     F .text.itcm	00000030 CreateFilter(unsigned int, int)
0000bae8 g       .text.itcm	00000000 _etext
20001ac0 g       .bss	00000000 _sbss
00001c70 g     F .text.itcm	000000c8 Adafruit_SPIDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, unsigned char)
000027fc g     F .text.itcm	00000024 digitalRead
60001f90 g       *ABS*	00000000 _stextload
00000bdc g     F .text.itcm	00000100 loop
000047d8 g     F .text.itcm	0000007a flexpwm_init
60001680 g     F .text.code	00000004 startup_debug_reset
00003718 g     F .text.itcm	00000064 usb_config_rx
000009a4 g     F .text.itcm	00000134 Toggle(String&)
00000e94 g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
000011ac g     F .text.itcm	00000040 PA12::readRaw()
20001d0c g     O .bss	00000004 EventResponder::lastInterrupt
00002830 g     F .text.itcm	00000134 memcpy
00007ea0 g     F .text.itcm	000001b0 __hexnan
20001ac0 g     O .data	00000000 .hidden __TMC_END__
20002ae0 g     O .bss	00000004 printTimer
0000b988 g     F .text.itcm	00000022 .hidden __floatsidf
20002b3c g     O .bss	00000004 systick_millis_count
00000e54 g     F .text.itcm	00000040 TwoWire::wait_idle()
000045ac g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
000042d0 g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
20002b6c g     O .bss	00000001 usb_configuration
0000496c g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
00006530 g     F .text.itcm	00000014 tolower
000089cc g     F .text.itcm	00000062 __ratio
00000850 g     F .text.itcm	00000154 Set(String&)
60001ea0  w    O .text.progmem	00000018 usb_string_manufacturer_name
00001728 g     F .text.itcm	0000009e Adafruit_BusIO_Register::read(unsigned char*, unsigned char)
00004a7c g     F .text.itcm	00000010 malloc
00002ee4  w    F .text.itcm	0000000a _fstat
00000d2c  w    F .text.itcm	0000001e TwoWire::read()
00008f30 g     F .text.itcm	00000040 __assert_func
200002a8 g     O .data	000000c8 __mprec_tens
60001ca4 g     F .text.code	000000e8 usb_init
000020d8 g     F .text.itcm	0000002c String::String(int, unsigned char)
20001f08 g     O .bss	00000004 __malloc_top_pad
20002b40 g     O .bss	00000004 systick_safe_read
00000d4c g     F .text.itcm	00000108 TwoWire::force_clock()
aaaaaaaf g       *ABS*	00000000 _flexram_bank_config
20001720 g     O .data	00000004 resistanceTrackingInterval
20001138 g     O .data	00000000 .hidden __dso_handle
00004a50 g     F .text.itcm	0000002c itoa
0000b968 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
00008e80 g     F .text.itcm	00000008 _localeconv_r
0000af0c g     F .text.itcm	000002f4 __sfvwrite_r
000082d0 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
60001f20 g     O .text.progmem	00000062 usb_config_descriptor_480
0000b6e4 g     F .text.itcm	00000000 .hidden __aeabi_drsub
00006fa0 g     F .text.itcm	00000024 _sbrk_r
000018e4 g     F .text.itcm	00000056 Adafruit_I2CDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, bool)
60001674 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
00003ed0 g     F .text.itcm	00000020 usb_serial_getchar
20002b44 g     O .bss	00000008 usb_cdc_line_coding
000027a8 g     F .text.itcm	00000054 digitalWrite
20001d14 g     O .bss	00000004 EventResponder::lastYield
00001170 g     F .text.itcm	00000010 PA12::~PA12()
00006f74 g     F .text.itcm	0000002c _read_r
00008bb0 g     F .text.itcm	000000c6 _fclose_r
20002060 g     O .bss	00000010 extmem_smalloc_pool
20001f00 g     O .bss	00000004 __malloc_max_sbrked_mem
000022c8 g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00004114 g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
0000b9ac g     F .text.itcm	00000042 .hidden __extendsfdf2
0000b6f0 g     F .text.itcm	00000276 .hidden __adddf3
6000f800 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
00008834 g     F .text.itcm	000000c2 __b2d
0000bae4 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
00002ef0  w    F .text.itcm	00000004 _isatty
20001d08 g     O .bss	00000004 EventResponder::firstYield
000040f0  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
0000502c g     F .text.itcm	000003d8 _realloc_r
00006ffc g     F .text.itcm	00000048 __libc_init_array
000029cc g     F .text.itcm	0000034c dtostrf
20000690 g     O .data	00000030 vtable for HardwareSerialIMXRT
20000798 g     O .data	00000100 __hexdig
0000b378 g     F .text.itcm	00000066 _fputwc_r
20000280 g     O .data	00000028 __mprec_bigtens
00008180 g     F .text.itcm	000000b0 __s2b
00002efc  w    F .text.itcm	00000004 abort
00000f94 g     F .text.itcm	00000160 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
000038b0  w    F .text.itcm	00000004 usb_serial_class::clear()
0000b968 g     F .text.itcm	0000001e .hidden __floatunsidf
00002ea4  w    F .text.itcm	00000034 _sbrk
6000da7c g       *ABS*	00000000 _sdataload
00008638 g     F .text.itcm	00000042 __mcmp
20001134 g     O .data	00000004 __brkval
20002b6b g     O .bss	00000001 usb_cdc_line_rtsdtr
00002248 g     F .text.itcm	00000008 String::append(String const&)
60001e34 g     F .text.code	00000000 _init
00003c20 g     F .text.itcm	00000002 usb_serial_reset
00002060 g     F .text.itcm	0000000e String::~String()
00006460 g     F .text.itcm	0000001c strtol
00008e5c g     F .text.itcm	00000024 strnlen
00002000 g     F .text.itcm	00000038 String::String(String const&)
0000ba90 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
0000228c g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
60001ebc g     O .text.progmem	00000062 usb_config_descriptor_12
00005408 g     F .text.itcm	00000e70 _strtod_l
00007e68 g     F .text.itcm	00000036 __match
20002ba0 g       .bss	00000000 _ebss
000021c8 g     F .text.itcm	0000007e String::append(char const*, unsigned int)
00008230 g     F .text.itcm	00000040 __hi0bits
20203080 g       .bss.dma	00000000 _heap_start
20001ed0 g     O .bss	00000001 __lock___malloc_recursive_mutex
00002070 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
20001f0c g     O .bss	00000138 __sf
000016a8 g     F .text.itcm	00000034 Adafruit_INA260::readBusVoltage()
00000002 g       *ABS*	00000000 _itcm_block_count
00001da0 g     F .text.itcm	00000006 Adafruit_MCP4725::Adafruit_MCP4725()
20001ae0 g     O .bss	00000020 endpoint0_transfer_data
20002b67 g     O .bss	00000001 trackResistance
00002964 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
00004854 g     F .text.itcm	000000f4 pwm_init
0000b6f0 g     F .text.itcm	00000276 .hidden __aeabi_dadd
00002060 g     F .text.itcm	0000000e String::~String()
60010400 g       .text.csf	00000000 __text_csf_end
60001b18 g     F .text.code	0000005c usb_pll_start
00008488 g     F .text.itcm	000000c0 __pow5mult
0000b9f0 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
20001ac0 g     O .bss	00000020 endpoint0_transfer_ack
20002b4c g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00003810 g     F .text.itcm	00000028 usb_transmit
00001630 g     F .text.itcm	0000003c PA12::presentPosition(int)
00001e48 g     F .text.itcm	00000020 systick_isr
00007050 g     F .text.itcm	00000002 __retarget_lock_release_recursive
00002104 g     F .text.itcm	0000002c String::String(unsigned long, unsigned char)
200010c0 g     O .data	00000010 Serial
00001e68 g     F .text.itcm	0000000c IRQHandler_Serial1
00002168 g     F .text.itcm	0000000e String::operator=(String const&)
00001188  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
60001674  w    F .text.code	00000002 startup_early_hook
20002070 g     O .bss	00000010 ina260
00003e04 g     F .text.itcm	00000044 usb_serial_peekchar
000000cc g     F .text.itcm	00000044 MatchCommand(String)
00000ad8 g     F .text.itcm	00000104 ProcessCommand(String&)
200006c0 g     O .data	00000010 vtable for PA12
000066ac g     F .text.itcm	0000000c __sfp_lock_acquire
00008e90 g     F .text.itcm	00000000 memchr
00002410 g     F .text.itcm	000002f0 set_arm_clock
20002b38 g     O .bss	00000004 systick_cycle_count
20001728 g     O .data	00000016 usb_string_serial_number_default
00007624 g     F .text.itcm	0000020c _free_r
00001230 g     F .text.itcm	000000c4 PA12::txPacket(int, int, int)
00006f18 g     F .text.itcm	0000000c __locale_mb_cur_max
00001488 g     F .text.itcm	00000174 PA12::txRxPacket(int, int, int)
00009e48 g     F .text.itcm	00000016 _wcsrtombs_r
00004268 g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
00004688 g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
20001d3c g     O .bss	00000190 __atexit0
00002038 g     F .text.itcm	00000028 String::String(String&&)
000038b4  w    F .text.itcm	00000004 usb_serial_class::flush()
0000b6ec g     F .text.itcm	0000027a .hidden __aeabi_dsub
200016b0 g     O .data	00000004 __malloc_sbrk_base
00001184  w    F .text.itcm	00000004 usb_serial_class::read()
00006db0 g     F .text.itcm	00000168 strstr
0000b9f0 g     F .text.itcm	0000006a .hidden __floatundidf
00002ef4  w    F .text.itcm	00000006 _lseek
00008548 g     F .text.itcm	000000f0 __lshift
000037e0 g     F .text.itcm	00000030 usb_prepare_transfer
0000413c g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
00002d18 g     F .text.itcm	0000018c unused_interrupt_vector
20002b50 g     O .bss	00000004 usb_timer0_callback
60001b74 g     F .text.code	00000130 tempmon_init
00000068 g     F .text.itcm	00000064 NextArg(String&)
000074fc g     F .text.itcm	00000088 __register_exitproc
0000166c g     F .text.itcm	00000002 Adafruit_INA260::Adafruit_INA260()
00002178 g     F .text.itcm	0000002a String::operator=(String&&)
00006a00 g     F .text.itcm	0000008a strncmp
00003e60 g     F .text.itcm	00000070 usb_serial_flush_input
000015fc g     F .text.itcm	00000034 PA12::goalPosition(int, int)
0000832c g     F .text.itcm	0000015c __multiply
00003ef0 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
00006a8c g     F .text.itcm	00000064 strncpy
000041b8 g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
20001ed8 g     O .bss	00000028 __malloc_current_mallinfo
000088f8 g     F .text.itcm	000000d4 __d2b
0000166c g     F .text.itcm	00000002 Adafruit_INA260::Adafruit_INA260()
60001d8c g     F .text.code	00000054 _reboot_Teensyduino_
60001678 g     F .text.code	00000002 startup_default_middle_hook
00001670 g     F .text.itcm	00000036 Adafruit_INA260::readCurrent()
00005014 g     F .text.itcm	00000018 realloc
000012f4 g     F .text.itcm	00000194 PA12::rxPacket(int)
000030e8 g     F .text.itcm	00000630 usb_isr
00006518 g     F .text.itcm	0000000c __cxa_atexit
00006f24 g     F .text.itcm	00000024 _close_r
0000b988 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00008dfc g     F .text.itcm	00000060 memcmp
20000668  w    O .data	00000028 vtable for usb_serial_class
00001fc4 g     F .text.itcm	0000003a String::String(char const*)
00007048 g     F .text.itcm	00000002 __retarget_lock_close_recursive
0000116c g     F .text.itcm	00000002 PA12::~PA12()
20002b34 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000b200 g     F .text.itcm	000000cc __swsetup_r
00008a30 g     F .text.itcm	0000005c __copybits
200012a8 g     O .data	00000408 __malloc_av_
20001d38 g     O .bss	00000004 __atexit
0000670c g     F .text.itcm	00000022 __sread
00003f84 g     F .text.itcm	00000094 usb_serial_flush_output
00004ffc g     F .text.itcm	0000000c __malloc_lock
0000424c g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
20001800 g     O .data	000002c0 _VectorsRam
00008da8 g     F .text.itcm	00000054 _fflush_r
00008f70 g     F .text.itcm	00000078 _calloc_r
0000229c g     F .text.itcm	0000002c String::equals(char const*) const
0000647c g     F .text.itcm	0000009c __utoa
000011ec g     F .text.itcm	00000044 PA12::clearBuffer()
20002b6f g     O .bss	00000001 yield_active_check_flags
0000704c g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20002b6d g     O .bss	00000001 usb_high_speed
00006890 g     F .text.itcm	000000a4 memset
00002820 g     F .text.itcm	00000010 main
20001f04 g     O .bss	00000004 __malloc_max_total_mem
00007044 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
2000171c g     O .data	00000004 printTimerInterval
00001da8 g     F .text.itcm	00000058 Adafruit_MCP4725::setVoltage(unsigned short, bool, unsigned long)
00006790 g     F .text.itcm	00000008 __sclose
00003858 g     F .text.itcm	00000058 usb_init_serialnumber
60001e88 g       .text.code	00000000 __init_array_end
00009110 g     F .text.itcm	00000cec _dtoa_r
00004a9c g     F .text.itcm	00000560 _malloc_r
00008af0 g     F .text.itcm	0000001a __ascii_wctomb
000023f0 g     F .text.itcm	0000000a String::toInt() const
0000ba00 g     F .text.itcm	0000005a .hidden __aeabi_l2d
000023d0 g     F .text.itcm	0000001e String::toLowerCase()
200006d0  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
00001d98 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
00002300 g     F .text.itcm	00000022 String::indexOf(String const&) const
000010f4 g     F .text.itcm	00000078 TwoWire::setClock(unsigned long)
00007584 g     F .text.itcm	000000a0 _malloc_trim_r
0000b3e0 g     F .text.itcm	00000106 _wcsnrtombs_l
60001eb8 g     O .text.progmem	00000004 string0
00003f1c g     F .text.itcm	00000018 usb_serial_write
6000167c  w    F .text.code	00000002 startup_late_hook
00001180  w    F .text.itcm	00000004 usb_serial_class::available()
00007068 g     F .text.itcm	000002dc strcmp
20000000 g     O .data	00000280 endpoint_queue_head
60001e88  w    O .text.progmem	00000016 usb_string_product_name
0000180c g     F .text.itcm	00000068 Adafruit_I2CDevice::write(unsigned char const*, unsigned int, bool, unsigned char const*, unsigned int)
00002700 g     F .text.itcm	000000a8 delay
0000ba90 g     F .text.itcm	00000040 .hidden __fixunsdfdi
0000bae0 g     F .fini	00000000 _fini
000021a4 g     F .text.itcm	00000022 String::operator=(char const*)
60001020 g     O .text.headers	0000000c BootData
00002f00 g     F .text.itcm	00000004 Panic_Temp_isr
0000ba5c g     F .text.itcm	00000030 .hidden __fixdfdi
00006278 g     F .text.itcm	000000a4 strtof
0000b4e8 g     F .text.itcm	00000024 _wcsnrtombs_r
00006fc4 g     F .text.itcm	0000002c _write_r
0000170c g     F .text.itcm	0000001a Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice*, unsigned short, unsigned char, unsigned char, unsigned char)
00002038 g     F .text.itcm	00000028 String::String(String&&)
00001fc4 g     F .text.itcm	0000003a String::String(char const*)
000074f0 g     F .text.itcm	0000000c nanf
200016c4 g     O .data	00000004 _impure_ptr
00008c78 g     F .text.itcm	00000130 __sflush_r
000066c4 g     F .text.itcm	00000046 _fwalk_sglue
60001e80 g       .text.code	00000000 __preinit_array_end
20001724 g     O .data	00000004 targetResistance
00008050 g     F .text.itcm	0000002a __ascii_mbtowc
000087d0 g     F .text.itcm	00000064 __ulp
000030bc g     F .text.itcm	0000002c usb_stop_sof_interrupts
000002f0 g     F .text.itcm	000000bc setup
20000f04 g     O .data	00000084 usb_descriptor_list
20002048 g     O .bss	00000004 dac
20002af0 g     O .bss	00000004 rpm_filter
000074e0 g     F .text.itcm	00000010 nan
20070000 g       .text.csf	00000000 _estack
00003f34 g     F .text.itcm	00000050 usb_serial_write_buffer_free
200016b8 g     O .data	0000000c __sglue
00003c24 g     F .text.itcm	00000100 usb_serial_configure
00001f2c  w    F .text.itcm	0000001c _write
20001ac0 g       .data	00000000 _edata
20002b62 g     O .bss	00000001 external_psram_size
0000b2cc g     F .text.itcm	000000aa __fputwc
000038b8  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
20002080 g     O .bss	00000a48 myServo
0000456c g     F .text.itcm	00000040 nvic_execution_priority()
00002968 g     F .text.itcm	00000062 ultoa
000023fc g     F .text.itcm	00000014 String::toFloat() const
00006730 g     F .text.itcm	0000003e __swrite
00001e00 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00001f4c g     F .text.itcm	00000078 Stream::readStringUntil(char, unsigned int)
200016b4 g     O .data	00000004 __malloc_trim_threshold
00001f48  w    F .text.itcm	00000004 usb_serial_class::peek()
00006524 g     F .text.itcm	0000000a fcvtf
00009e60 g     F .text.itcm	00000028 fiprintf
00009f00 g     F .text.itcm	00000f8c _vfiprintf_r
00001afc  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
0000867c g     F .text.itcm	00000154 __mdiff
0000116c g     F .text.itcm	00000002 PA12::~PA12()
20000f98 g     O .data	00000120 _impure_data
000066b8 g     F .text.itcm	0000000c __sfp_lock_release
000016dc g     F .text.itcm	00000030 Adafruit_INA260::readPower()
00002104 g     F .text.itcm	0000002c String::String(unsigned long, unsigned char)
00001190 g     F .text.itcm	0000001c PA12::PA12(HardwareSerial*, int, bool)
2000091c g     O .data	00000101 _ctype_
00002ed8  w    F .text.itcm	00000004 _read
60001e80 g       .text.code	00000000 __init_array_start
200010b8 g     O .data	00000004 F_BUS_ACTUAL
0000b50c g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
00007400 g     F .text.itcm	000000dc strlen
000078d4 g     F .text.itcm	00000594 __gethex
60001e88 g     O .text.progmem	00000016 usb_string_product_name_default
00006934 g     F .text.itcm	000000cc strchr
000040f4 g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
60001678  w    F .text.code	00000002 startup_middle_hook
00001ec4 g     F .text.itcm	0000004c Print::print(String const&)
0000b9ac g     F .text.itcm	00000042 .hidden __aeabi_f2d
60001684 g     F .text.code	00000110 configure_cache
20002aec g     O .bss	00000004 resistanceTracingTimer
20002b63 g     O .bss	00000001 printOutput
0000b6ec g     F .text.itcm	0000027a .hidden __subdf3
000017c8 g     F .text.itcm	00000042 Adafruit_BusIO_Register::read()
60001e80 g       .text.code	00000000 __preinit_array_start
00003838 g     F .text.itcm	0000001c usb_receive
0000226c g     F .text.itcm	0000001e String::append(char)
00008270 g     F .text.itcm	00000060 __lo0bits
00010400 g       *ABS*	00000000 _flashimagelen
00004a3c g     F .text.itcm	0000000a __aeabi_atexit
00004948 g     F .text.itcm	00000024 rtc_get
70000000 g       .bss.extram	00000000 _extram_start
00001e44 g     F .text.itcm	00000004 pendablesrvreq_isr
2000113c g     O .data	0000016c __global_locale
00003d24 g     F .text.itcm	000000e0 usb_serial_read
20001ed4 g     O .bss	00000001 __lock___sfp_recursive_mutex
00001da0 g     F .text.itcm	00000006 Adafruit_MCP4725::Adafruit_MCP4725()
0000377c g     F .text.itcm	00000064 usb_config_tx
00002edc  w    F .text.itcm	00000006 _close
00004a8c g     F .text.itcm	00000010 free
00000260 g     F .text.itcm	00000090 GetRpmBuffered(Filter*)
000080dc g     F .text.itcm	000000a4 __multadd
000080c8 g     F .text.itcm	00000012 _Bfree
20001728  w    O .data	00000016 usb_string_serial_number


