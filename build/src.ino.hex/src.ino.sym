
c:\Users\Kent4\Projects\Wildcat_Wind_Power\WWP_2024_Turbine_Control_Code\build\src.ino.hex/src.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60002008 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00009b80 l    d  .fini	00000000 .fini
00009b84 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20001ac0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6000d84c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 tempmon.c
20002b1c l     O .bss	00000004 s_hotCount
20002b20 l     O .bss	00000004 s_hotTemp
20002b24 l     O .bss	00000004 s_hot_ROOM
20002b28 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00002ee8 l     F .text.itcm	00000088 schedule_transfer
00002f70 l     F .text.itcm	00000036 run_callbacks
00002fa8 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000204c l     O .bss	00000008 endpoint0_buffer
20002054 l     O .bss	00000004 endpoint0_notify_mask
20001c80 l     O .bss	00000008 endpoint0_setupdata
20002058 l     O .bss	00000004 endpointN_notify_mask
20002ae4 l     O .bss	00000008 reply_buffer
20002b5d l     O .bss	00000001 sof_usage
20002b64 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
20002b59 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20002ac8 l     O .bss	00000000 object.0
60002000 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 src.ino.cpp
00000690 l     F .text.itcm	00000044 _GLOBAL__sub_I_myServo
00000000 l    df *ABS*	00000000 usb_desc.c
20001758 l     O .data	00000012 device_descriptor
2000176c l     O .data	00000028 microsoft_os_compatible_id_desc
20001794 l     O .data	00000012 microsoft_os_string_desc
600021f4 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 PA12.cpp
00000000 l    df *ABS*	00000000 IR_Protocol.c
00000000 l    df *ABS*	00000000 SoftwareSerial.cpp
00000000 l    df *ABS*	00000000 Adafruit_INA260.cpp
00000000 l    df *ABS*	00000000 Adafruit_BusIO_Register.cpp
00000000 l    df *ABS*	00000000 Adafruit_I2CDevice.cpp
00000000 l    df *ABS*	00000000 Adafruit_SPIDevice.cpp
00001810 l     F .text.itcm	000001b4 Adafruit_SPIDevice::transfer(unsigned char*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 SPI.cpp
00001cb8 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 Adafruit_MCP4725.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
20001c88 l     O .bss	00000040 rx_buffer1
20001cc8 l     O .bss	00000040 tx_buffer1
200003f4 l     O .data	00000060 UART6_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
00003848 l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
000038a8 l     F .text.itcm	000000b4 rx_event
0000395c l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
000039ec l     F .text.itcm	000001b8 usb_serial_write.part.0
20002aec l     O .bss	00000004 rx_available
20002af0 l     O .bss	00000010 rx_count
20002b5b l     O .bss	00000001 rx_head
20002b00 l     O .bss	00000010 rx_index
20002b10 l     O .bss	00000009 rx_list
20002b50 l     O .bss	00000002 rx_packet_size
20002b5c l     O .bss	00000001 rx_tail
20001b00 l     O .bss	00000100 rx_transfer
20002b5e l     O .bss	00000001 transmit_previous_timeout
20002b52 l     O .bss	00000002 tx_available
20002b5f l     O .bss	00000001 tx_head
20002b60 l     O .bss	00000001 tx_noautoflush
20002b54 l     O .bss	00000002 tx_packet_size
20001c00 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20002b58 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-atol.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
00005388 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000559c l     F .text.itcm	00000018 stdio_exit_handler
000055b4 l     F .text.itcm	00000040 cleanup_stdio
000055f4 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strchr.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-strstr.o
00005abc l     F .text.itcm	000000c6 critical_factorization
00005b84 l     F .text.itcm	000001f8 two_way_long_needle
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-strnlen.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00007468 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00008308 l     F .text.itcm	00000076 __sprint_r.part.0
0000930c l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00009b68 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00009b70 l     F .text.itcm	00000008 ___init_veneer
00009b78 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
60001fc0 l     F .text.code	00000008 __memset_veneer
60001fc8 l     F .text.code	00000008 __main_veneer
60001fd0 l     F .text.code	00000008 __set_arm_clock_veneer
60001fd8 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001fe0 l     F .text.code	00000008 ____libc_init_array_veneer
60001fe8 l     F .text.code	00000008 __sm_set_pool_veneer
60001ff0 l     F .text.code	00000008 __delay_veneer
60001ff8 l     F .text.code	00000008 __pwm_init_veneer
00000220 g     F .text.itcm	00000284 PrintOutput()
00001804 g     F .text.itcm	0000000c Adafruit_I2CDevice::setSpeed(unsigned long)
00003dcc g     F .text.itcm	00000018 usb_serial_available
000020e8 g     F .text.itcm	00000036 String::String(float, unsigned char)
00009b40 g     F .text.itcm	00000024 _isatty_r
000062fc g     F .text.itcm	000000ba strcpy
00002090 g     F .text.itcm	0000002c String::String(int, unsigned char)
00001ad4 g     F .text.itcm	00000064 Adafruit_SPIDevice::endTransactionWithDeassertingCS()
600017f8 g     F .text.code	00000002 startup_default_late_hook
00005f14 g     F .text.itcm	0000002c _lseek_r
00003f9c  w    F .text.itcm	000000d8 yield
00000c9c g     F .text.itcm	0000001c PA12::PA12(HardwareSerial*, int, bool)
00001444 g     F .text.itcm	0000001a Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice*, unsigned short, unsigned char, unsigned char, unsigned char)
20002b4c g     O .bss	00000004 usb_timer1_callback
60002110 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
60001910 g     F .text.code	00000384 configure_external_ram
00001420 g     F .text.itcm	00000022 Adafruit_INA260::conversionReady()
200017c2 g     O .data	00000002 dacValue
20000f40 g     O .data	00000140 Wire1
20001ecc g     O .bss	00000001 __lock___atexit_recursive_mutex
0000827c g     F .text.itcm	0000004c _wcrtomb_r
60001674 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
00001ec8 g     F .text.itcm	0000001c Print::println()
00000b30 g     F .text.itcm	000000aa TwoWire::isr()
000057c8 g     F .text.itcm	00000020 __sseek
000056c8 g     F .text.itcm	0000003c __sinit
00006f90 g     F .text.itcm	000000a4 fcvtbuf
00009a64 g     F .text.itcm	000000b0 __swbuf_r
00002268 g     F .text.itcm	00000056 String::substring(unsigned int) const
000011a8 g     F .text.itcm	00000034 PA12::movingSpeed(int, int)
00004f8c g     F .text.itcm	0000000c __malloc_unlock
20002b57 g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
60001f5c g     F .text.code	00000054 analog_init
0000173c g     F .text.itcm	00000070 Adafruit_I2CDevice::_read(unsigned char*, unsigned int, bool)
20000d8c g     O .data	00000004 F_CPU_ACTUAL
000022c0 g     F .text.itcm	00000054 String::substring(unsigned int, unsigned int) const
000057f0 g     F .text.itcm	000000f8 memmove
00001b38 g     F .text.itcm	000000b6 Adafruit_SPIDevice::write(unsigned char const*, unsigned int, unsigned char const*, unsigned int)
000067fc g     F .text.itcm	0000004c _Balloc
00009b8c g       .ARM.exidx	00000000 __exidx_end
20002b56 g     O .bss	00000001 EventResponder::runningFromYield
00002e88 g     F .text.itcm	00000060 tempmonGetTemp
00001e2c g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
200011c0 g     O .data	00000004 __atexit_recursive_mutex
000049cc g     F .text.itcm	00000008 atol
00005fbc g     F .text.itcm	0000000c __errno
00004610 g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
60001000 g     O .text.headers	00000020 ImageVectorTable
000020e8 g     F .text.itcm	00000036 String::String(float, unsigned char)
20001d10 g     O .bss	00000004 EventResponder::firstInterrupt
000037d8 g     F .text.itcm	00000004 usb_transfer_status
0000493c g     F .text.itcm	00000084 sm_set_pool
20001d18 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
20002044 g     O .bss	00000004 __stdio_exit_handler
20000da0 g     O .data	00000060 Serial1
00001fb8 g     F .text.itcm	00000038 String::String(String const&)
00003840  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
00009b14 g     F .text.itcm	0000002c _fstat_r
20000778 g     O .data	00000370 digital_pin_to_info_PGM
2000205c g     O .bss	00000004 errno
60002058  w    O .text.progmem	00000050 TwoWire::i2c3_hardware
00009b88 g       .text.itcm	00000000 _etext
00001218 g     F .text.itcm	00000060 irp_get_baudrate
20001ac0 g       .bss	00000000 _sbss
00001bf0 g     F .text.itcm	000000c8 Adafruit_SPIDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, unsigned char)
0000270c g     F .text.itcm	00000024 digitalRead
60002200 g       *ABS*	00000000 _stextload
00000624 g     F .text.itcm	0000006c loop
0000475c g     F .text.itcm	0000007a flexpwm_init
600017fc g     F .text.code	00000004 startup_debug_reset
0000369c g     F .text.itcm	00000064 usb_config_rx
000008d0 g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
00000d24 g     F .text.itcm	00000040 PA12::readRaw()
20001d0c g     O .bss	00000004 EventResponder::lastInterrupt
000027b0 g     F .text.itcm	00000134 memcpy
20001ac0 g     O .data	00000000 .hidden __TMC_END__
20002ae0 g     O .bss	00000004 printTimer
0000163c g     F .text.itcm	0000001a Adafruit_BusIO_RegisterBits::read()
20002b34 g     O .bss	00000004 systick_millis_count
00000890 g     F .text.itcm	00000040 TwoWire::wait_idle()
00004530 g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
00004254 g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
20002b62 g     O .bss	00000001 usb_configuration
000048f0 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000169c g     F .text.itcm	00000036 Adafruit_I2CDevice::begin(bool)
60002110  w    O .text.progmem	00000018 usb_string_manufacturer_name
00001550 g     F .text.itcm	0000009e Adafruit_BusIO_Register::read(unsigned char*, unsigned char)
00004a00 g     F .text.itcm	00000010 malloc
600020a8  w    O .text.progmem	00000050 TwoWire::i2c1_hardware
00002e68  w    F .text.itcm	0000000a _fstat
000006e4  w    F .text.itcm	0000001e TwoWire::read()
000073b0 g     F .text.itcm	00000040 __assert_func
200002a8 g     O .data	000000c8 __mprec_tens
60001e20 g     F .text.code	000000e8 usb_init
00002090 g     F .text.itcm	0000002c String::String(int, unsigned char)
20001f08 g     O .bss	00000004 __malloc_top_pad
20002b38 g     O .bss	00000004 systick_safe_read
00000788 g     F .text.itcm	00000108 TwoWire::force_clock()
aaaaaaaf g       *ABS*	00000000 _flexram_bank_config
200011c8 g     O .data	00000000 .hidden __dso_handle
000049d4 g     F .text.itcm	0000002c itoa
00007304 g     F .text.itcm	00000008 _localeconv_r
0000938c g     F .text.itcm	000002f4 __sfvwrite_r
000069a0 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
60002190 g     O .text.progmem	00000062 usb_config_descriptor_480
00005f6c g     F .text.itcm	00000024 _sbrk_r
000017ac g     F .text.itcm	00000056 Adafruit_I2CDevice::write_then_read(unsigned char const*, unsigned int, unsigned char*, unsigned int, bool)
600017f0 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
00003e54 g     F .text.itcm	00000020 usb_serial_getchar
20002b3c g     O .bss	00000008 usb_cdc_line_coding
000026b8 g     F .text.itcm	00000054 digitalWrite
20001d14 g     O .bss	00000004 EventResponder::lastYield
00000c7c g     F .text.itcm	00000010 PA12::~PA12()
00005f40 g     F .text.itcm	0000002c _read_r
00007034 g     F .text.itcm	000000c6 _fclose_r
20002060 g     O .bss	00000010 extmem_smalloc_pool
20001f00 g     O .bss	00000004 __malloc_max_sbrked_mem
00002730 g     F .text.itcm	00000070 pinMode
0000220c g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00004098 g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
600016a8 g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
20001080 g     O .data	00000140 Wire2
000004a4 g     F .text.itcm	00000180 ProcessCommand(String)
6000dc00 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
00009b84 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
00002e74  w    F .text.itcm	00000004 _isatty
20001d08 g     O .bss	00000004 EventResponder::firstYield
00004074  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
00004fb0 g     F .text.itcm	000003d8 _realloc_r
00001658 g     F .text.itcm	00000030 Adafruit_BusIO_RegisterBits::write(unsigned long)
00005fc8 g     F .text.itcm	00000048 __libc_init_array
00002950 g     F .text.itcm	0000034c dtostrf
000006d8  w    F .text.itcm	0000000c TwoWire::available()
2000047c g     O .data	00000030 vtable for HardwareSerialIMXRT
000097f8 g     F .text.itcm	00000066 _fputwc_r
20000280 g     O .data	00000028 __mprec_bigtens
00002e80  w    F .text.itcm	00000004 abort
000009d0 g     F .text.itcm	00000160 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
00003834  w    F .text.itcm	00000004 usb_serial_class::clear()
00002e28  w    F .text.itcm	00000034 _sbrk
6000bd8c g       *ABS*	00000000 _sdataload
00006d08 g     F .text.itcm	00000042 __mcmp
200011c4 g     O .data	00000004 __brkval
20002b61 g     O .bss	00000001 usb_cdc_line_rtsdtr
60001fb0 g     F .text.code	00000000 _init
00003ba4 g     F .text.itcm	00000002 usb_serial_reset
00002018 g     F .text.itcm	0000000e String::~String()
000054cc g     F .text.itcm	0000001c strtol
000072e0 g     F .text.itcm	00000024 strnlen
00001fb8 g     F .text.itcm	00000038 String::String(String const&)
000021d0 g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
6000212c g     O .text.progmem	00000062 usb_config_descriptor_12
200004bc g     O .data	00000024 vtable for TwoWire
20002ba0 g       .bss	00000000 _ebss
00001688 g     F .text.itcm	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
600016fc g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
00002130 g     F .text.itcm	0000007e String::append(char const*, unsigned int)
00006900 g     F .text.itcm	00000040 __hi0bits
00000be8 g     F .text.itcm	0000000c lpi2c3_isr()
20203080 g       .bss.dma	00000000 _heap_start
20001ed0 g     O .bss	00000001 __lock___malloc_recursive_mutex
60002008  w    O .text.progmem	00000050 TwoWire::i2c4_hardware
00002028 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
20001f0c g     O .bss	00000138 __sf
000013bc g     F .text.itcm	00000034 Adafruit_INA260::readBusVoltage()
00000002 g       *ABS*	00000000 _itcm_block_count
00001d20 g     F .text.itcm	00000006 Adafruit_MCP4725::Adafruit_MCP4725()
20001ae0 g     O .bss	00000020 endpoint0_transfer_data
000028e8 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
000047d8 g     F .text.itcm	000000f4 pwm_init
00002018 g     F .text.itcm	0000000e String::~String()
6000e800 g       .text.csf	00000000 __text_csf_end
60001c94 g     F .text.code	0000005c usb_pll_start
00006b58 g     F .text.itcm	000000c0 __pow5mult
00000bf4 g     F .text.itcm	0000000c lpi2c4_isr()
20001ac0 g     O .bss	00000020 endpoint0_transfer_ack
20002b44 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00003794 g     F .text.itcm	00000028 usb_transmit
000011dc g     F .text.itcm	0000003c PA12::presentPosition(int)
00001e00 g     F .text.itcm	00000020 systick_isr
0000601c g     F .text.itcm	00000002 __retarget_lock_release_recursive
000020bc g     F .text.itcm	0000002c String::String(unsigned long, unsigned char)
20000d90 g     O .data	00000010 Serial
00001e20 g     F .text.itcm	0000000c IRQHandler_Serial1
00002120 g     F .text.itcm	0000000e String::operator=(String const&)
00000c94  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
600017f0  w    F .text.code	00000002 startup_early_hook
20002070 g     O .bss	00000010 ina260
00003d88 g     F .text.itcm	00000044 usb_serial_peekchar
000014f8 g     F .text.itcm	00000058 Adafruit_BusIO_Register::write(unsigned long, unsigned char)
200004ac g     O .data	00000010 vtable for PA12
00005704 g     F .text.itcm	0000000c __sfp_lock_acquire
00007310 g     F .text.itcm	00000000 memchr
00002320 g     F .text.itcm	000002f0 set_arm_clock
20002b30 g     O .bss	00000004 systick_cycle_count
200017ac g     O .data	00000016 usb_string_serial_number_default
000065c4 g     F .text.itcm	0000020c _free_r
00000da8 g     F .text.itcm	000000c4 PA12::txPacket(int, int, int)
00005ee4 g     F .text.itcm	0000000c __locale_mb_cur_max
00001000 g     F .text.itcm	00000174 PA12::txRxPacket(int, int, int)
000082c8 g     F .text.itcm	00000016 _wcsrtombs_r
000041ec g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
0000460c g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
20001d3c g     O .bss	00000190 __atexit0
00001ff0 g     F .text.itcm	00000028 String::String(String&&)
00003838  w    F .text.itcm	00000004 usb_serial_class::flush()
20001740 g     O .data	00000004 __malloc_sbrk_base
00000c90  w    F .text.itcm	00000004 usb_serial_class::read()
00005d7c g     F .text.itcm	00000168 strstr
00002e78  w    F .text.itcm	00000006 _lseek
00006c18 g     F .text.itcm	000000f0 __lshift
00003764 g     F .text.itcm	00000030 usb_prepare_transfer
000040c0 g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
00002c9c g     F .text.itcm	0000018c unused_interrupt_vector
20002b48 g     O .bss	00000004 usb_timer0_callback
60001cf0 g     F .text.code	00000130 tempmon_init
0000649c g     F .text.itcm	00000088 __register_exitproc
000012c4 g     F .text.itcm	00000002 Adafruit_INA260::Adafruit_INA260()
00003de4 g     F .text.itcm	00000070 usb_serial_flush_input
00001174 g     F .text.itcm	00000034 PA12::goalPosition(int, int)
000069fc g     F .text.itcm	0000015c __multiply
00003e74 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
00005a58 g     F .text.itcm	00000064 strncpy
0000413c g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
20001ed8 g     O .bss	00000028 __malloc_current_mallinfo
00006ea0 g     F .text.itcm	000000d4 __d2b
000012c4 g     F .text.itcm	00000002 Adafruit_INA260::Adafruit_INA260()
60001f08 g     F .text.code	00000054 _reboot_Teensyduino_
600017f4 g     F .text.code	00000002 startup_default_middle_hook
00004f98 g     F .text.itcm	00000018 realloc
00000e6c g     F .text.itcm	00000194 PA12::rxPacket(int)
0000306c g     F .text.itcm	00000630 usb_isr
00005584 g     F .text.itcm	0000000c __cxa_atexit
00005ef0 g     F .text.itcm	00000024 _close_r
00007280 g     F .text.itcm	00000060 memcmp
20000454  w    O .data	00000028 vtable for usb_serial_class
00001f7c g     F .text.itcm	0000003a String::String(char const*)
00006014 g     F .text.itcm	00000002 __retarget_lock_close_recursive
00000c78 g     F .text.itcm	00000002 PA12::~PA12()
20002b2c g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00009680 g     F .text.itcm	000000cc __swsetup_r
20001338 g     O .data	00000408 __malloc_av_
20001d38 g     O .bss	00000004 __atexit
00005764 g     F .text.itcm	00000022 __sread
00003f08 g     F .text.itcm	00000094 usb_serial_flush_output
00004f80 g     F .text.itcm	0000000c __malloc_lock
000041d0 g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
20001800 g     O .data	000002c0 _VectorsRam
0000722c g     F .text.itcm	00000054 _fflush_r
000073f0 g     F .text.itcm	00000078 _calloc_r
000021e0 g     F .text.itcm	0000002c String::equals(char const*) const
000054e8 g     F .text.itcm	0000009c __utoa
00000d64 g     F .text.itcm	00000044 PA12::clearBuffer()
20002b65 g     O .bss	00000001 yield_active_check_flags
00006018 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20002b63 g     O .bss	00000001 usb_high_speed
000058e8 g     F .text.itcm	000000a4 memset
000027a0 g     F .text.itcm	00000010 main
20001f04 g     O .bss	00000004 __malloc_max_total_mem
00006010 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
200017a8 g     O .data	00000004 printTimerInterval
00001d60 g     F .text.itcm	00000058 Adafruit_MCP4725::setVoltage(unsigned short, bool, unsigned long)
000057e8 g     F .text.itcm	00000008 __sclose
000037dc g     F .text.itcm	00000058 usb_init_serialnumber
60002008 g       .text.code	00000000 __init_array_end
00007590 g     F .text.itcm	00000cec _dtoa_r
00004a20 g     F .text.itcm	00000560 _malloc_r
00006f74 g     F .text.itcm	0000001a __ascii_wctomb
00002314 g     F .text.itcm	0000000a String::toInt() const
00001688 g     F .text.itcm	00000012 Adafruit_I2CDevice::Adafruit_I2CDevice(unsigned char, TwoWire*)
200004e0  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
00001d18 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
00002244 g     F .text.itcm	00000022 String::indexOf(String const&) const
00001634 g     F .text.itcm	00000008 Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits(Adafruit_BusIO_Register*, unsigned char, unsigned char)
00000c00 g     F .text.itcm	00000078 TwoWire::setClock(unsigned long)
00006524 g     F .text.itcm	000000a0 _malloc_trim_r
00009860 g     F .text.itcm	00000106 _wcsnrtombs_l
60002128 g     O .text.progmem	00000004 string0
00003ea0 g     F .text.itcm	00000018 usb_serial_write
600017f8  w    F .text.code	00000002 startup_late_hook
00000c8c  w    F .text.itcm	00000004 usb_serial_class::available()
00006028 g     F .text.itcm	000002dc strcmp
20000000 g     O .data	00000280 endpoint_queue_head
600020f8  w    O .text.progmem	00000016 usb_string_product_name
000016d4 g     F .text.itcm	00000068 Adafruit_I2CDevice::write(unsigned char const*, unsigned int, bool, unsigned char const*, unsigned int)
000012c8 g     F .text.itcm	000000f4 Adafruit_INA260::begin(unsigned char, TwoWire*)
00002610 g     F .text.itcm	000000a8 delay
00009b80 g     F .fini	00000000 _fini
00000720 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
60001020 g     O .text.headers	0000000c BootData
00002e84 g     F .text.itcm	00000004 Panic_Temp_isr
00009968 g     F .text.itcm	00000024 _wcsnrtombs_r
00005f90 g     F .text.itcm	0000002c _write_r
00001444 g     F .text.itcm	0000001a Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice*, unsigned short, unsigned char, unsigned char, unsigned char)
00001ff0 g     F .text.itcm	00000028 String::String(String&&)
00001f7c g     F .text.itcm	0000003a String::String(char const*)
20001754 g     O .data	00000004 _impure_ptr
000070fc g     F .text.itcm	00000130 __sflush_r
20000e00 g     O .data	00000140 Wire
0000571c g     F .text.itcm	00000046 _fwalk_sglue
60002000 g       .text.code	00000000 __preinit_array_end
000067d0 g     F .text.itcm	0000002a __ascii_mbtowc
00003040 g     F .text.itcm	0000002c usb_stop_sof_interrupts
00000704  w    F .text.itcm	00000018 TwoWire::peek()
0000071c  w    F .text.itcm	00000002 TwoWire::flush()
00000068 g     F .text.itcm	000001b8 setup
20000bd0 g     O .data	00000084 usb_descriptor_list
00000cb8 g     F .text.itcm	0000006c PA12::begin(int)
20002048 g     O .bss	00000004 dac
20070000 g       .text.csf	00000000 _estack
00003eb8 g     F .text.itcm	00000050 usb_serial_write_buffer_free
60001730 g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
20001748 g     O .data	0000000c __sglue
00003ba8 g     F .text.itcm	00000100 usb_serial_configure
0000074c g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00001ee4  w    F .text.itcm	0000001c _write
20001ac0 g       .data	00000000 _edata
20002b5a g     O .bss	00000001 external_psram_size
0000974c g     F .text.itcm	000000aa __fputwc
0000383c  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
00000bdc g     F .text.itcm	0000000c lpi2c1_isr()
20002080 g     O .bss	00000a48 myServo
000044f0 g     F .text.itcm	00000040 nvic_execution_priority()
000028ec g     F .text.itcm	00000062 ultoa
60001788 g     F .text.code	00000068 TwoWire::begin()
00005788 g     F .text.itcm	0000003e __swrite
000028e4 g     F .text.itcm	00000004 operator new(unsigned int)
00001db8 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00001f04 g     F .text.itcm	00000078 Stream::readStringUntil(char, unsigned int)
20001744 g     O .data	00000004 __malloc_trim_threshold
00001f00  w    F .text.itcm	00000004 usb_serial_class::peek()
00005590 g     F .text.itcm	0000000a fcvtf
000082e0 g     F .text.itcm	00000028 fiprintf
00008380 g     F .text.itcm	00000f8c _vfiprintf_r
000019c4  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
00001634 g     F .text.itcm	00000008 Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits(Adafruit_BusIO_Register*, unsigned char, unsigned char)
00006d4c g     F .text.itcm	00000154 __mdiff
00000c78 g     F .text.itcm	00000002 PA12::~PA12()
20000c68 g     O .data	00000120 _impure_data
00005710 g     F .text.itcm	0000000c __sfp_lock_release
00001d28 g     F .text.itcm	00000038 Adafruit_MCP4725::begin(unsigned char, TwoWire*)
000013f0 g     F .text.itcm	00000030 Adafruit_INA260::readPower()
000020bc g     F .text.itcm	0000002c String::String(unsigned long, unsigned char)
00000c9c g     F .text.itcm	0000001c PA12::PA12(HardwareSerial*, int, bool)
200005c8 g     O .data	00000101 _ctype_
00002e5c  w    F .text.itcm	00000004 _read
60002000 g       .text.code	00000000 __init_array_start
20000d88 g     O .data	00000004 F_BUS_ACTUAL
0000998c g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
000063c0 g     F .text.itcm	000000dc strlen
600020f8 g     O .text.progmem	00000016 usb_string_product_name_default
0000598c g     F .text.itcm	000000cc strchr
00004078 g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
600017f4  w    F .text.code	00000002 startup_middle_hook
00001e7c g     F .text.itcm	0000004c Print::print(String const&)
60001800 g     F .text.code	00000110 configure_cache
00001460 g     F .text.itcm	00000096 Adafruit_BusIO_Register::write(unsigned char*, unsigned char)
000015f0 g     F .text.itcm	00000042 Adafruit_BusIO_Register::read()
60002000 g       .text.code	00000000 __preinit_array_start
000037bc g     F .text.itcm	0000001c usb_receive
000021b0 g     F .text.itcm	0000001e String::append(char)
00006940 g     F .text.itcm	00000060 __lo0bits
0000e800 g       *ABS*	00000000 _flashimagelen
000049c0 g     F .text.itcm	0000000a __aeabi_atexit
000048cc g     F .text.itcm	00000024 rtc_get
70000000 g       .bss.extram	00000000 _extram_start
00001dfc g     F .text.itcm	00000004 pendablesrvreq_isr
00001278 g     F .text.itcm	0000004c SoftwareSerial::begin(unsigned long)
000006d4  w    F .text.itcm	00000004 Print::availableForWrite()
200011cc g     O .data	0000016c __global_locale
00003ca8 g     F .text.itcm	000000e0 usb_serial_read
20001ed4 g     O .bss	00000001 __lock___sfp_recursive_mutex
00001d20 g     F .text.itcm	00000006 Adafruit_MCP4725::Adafruit_MCP4725()
00003700 g     F .text.itcm	00000064 usb_config_tx
00002e60  w    F .text.itcm	00000006 _close
00004a10 g     F .text.itcm	00000010 free
0000685c g     F .text.itcm	000000a4 __multadd
00006848 g     F .text.itcm	00000012 _Bfree
200017ac  w    O .data	00000016 usb_string_serial_number


